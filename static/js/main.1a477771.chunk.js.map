{"version":3,"sources":["components/Loading/Loading.tsx","appRoutes.ts","pages/NotFound/NotFound.tsx","AppRouter.tsx","layout/HomeLayout.tsx","reportWebVitals.ts","index.tsx"],"names":["Loading","align","direction","style","width","height","justifyContent","paddingTop","tip","AppRoutes","Text","Typography","NotFound","MinimumWageScatterPlot","lazy","AppRouter","exact","path","to","component","Content","Layout","Header","SubMenu","Menu","MIN_WAGE_TITLE","HomeLayout","useState","collapsed","setCollapsed","title","name","content","minHeight","bodyStyle","backgroundColor","headerStyle","border","placement","visible","onClose","theme","selectedKeys","mode","icon","DollarCircleOutlined","Item","type","onClick","MenuOutlined","Suspense","fallback","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"sHAAA,gEAEaA,EAAoB,kBAC/B,cAAC,IAAD,CACEC,MAAM,SACNC,UAAU,aACVC,MAAO,CACLC,MAAO,OACPC,OAAQ,OACRC,eAAgB,SAChBC,WAAY,KAPhB,SAUE,cAAC,IAAD,CAAMC,IAAI,mB,iOCbDC,EACL,IADKA,EAED,gB,iBCAJC,EAASC,IAATD,KAIKE,EAAoC,WAC/C,OAAO,cAACF,EAAD,yBCAHG,EAAyBC,gBAAK,kBAAM,uDAE7BC,EAAsB,kBACjC,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAMR,EAAnB,SACE,cAAC,IAAD,CAAUS,GAAIT,MAEhB,cAAC,IAAD,CAAOO,OAAK,EAACC,KAAMR,EAAoBU,UAAWN,IAClD,cAAC,IAAD,CAAOM,UAAWP,Q,SCHdQ,EAAoBC,IAApBD,QAASE,EAAWD,IAAXC,OACTC,EAAYC,IAAZD,QAEFE,EAAiB,oBAIVC,EAAwC,WACnD,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAQL,EAEd,OACE,qCACE,eAAC,IAAD,WACE,gCAAQK,IACR,sBAAMC,KAAK,cAAcC,QAASF,OAEpC,eAAC,IAAD,CAAQ3B,MAAO,CAAE8B,UAAW,SAA5B,UACE,cAAC,IAAD,CACEC,UAAW,CAAEC,gBAAiB,WAC9BC,YAAa,CACXC,OAAQ,QAEVP,MAAM,QACN1B,MAAO,IACPkC,UAAU,OACVC,QAASX,EACTY,QAAS,kBAAMX,GAAa,IAT9B,SAWE,cAAC,IAAD,CAAMY,MAAM,OAAOC,aAAc,CArBrB,KAqBoCC,KAAK,SAArD,SACE,cAACpB,EAAD,CAEEqB,KAAM,cAACC,EAAA,EAAD,IACNf,MAAOL,EAHT,SAKE,cAAC,IAAKqB,KAAN,UACE,cAAC,IAAD,CAAM5B,GAAIT,EAAV,yCADa,cAJX,SAUV,eAAC,IAAD,WACE,cAACa,EAAD,UACE,cAAC,IAAD,CAAQyB,KAAK,UAAUC,QAAS,kBAAMnB,GAAcD,IAApD,SACE,cAACqB,EAAA,EAAD,QAGJ,cAAC,IAAMC,SAAP,CAAgBC,SAAU,cAACnD,EAAA,EAAD,IAA1B,SACE,cAACoB,EAAD,CAASjB,MAAO,CAAEiD,OAAQ,aAA1B,SACE,cAAC,EAAD,kB,iBChDCC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCERQ,EAAc,IAAIC,IAExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAACC,EAAA,EAAD,CAAqBC,OAAQN,EAA7B,SACE,cAAC,IAAD,UACE,cAAC,EAAD,YAKRO,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.1a477771.chunk.js","sourcesContent":["import { Space, Spin } from 'antd';\n\nexport const Loading: React.FC = () => (\n  <Space\n    align=\"center\"\n    direction=\"horizontal\"\n    style={{\n      width: '100%',\n      height: '100%',\n      justifyContent: 'center',\n      paddingTop: 100,\n    }}\n  >\n    <Spin tip=\"Loading...\" />\n  </Space>\n);\n","export const AppRoutes = {\n  Home: '/',\n  FinalVis: '/minimum-wage',\n};\n","import { Typography } from 'antd';\n\nconst { Text } = Typography;\n\nexport interface NotFoundProps {}\n\nexport const NotFound: React.FC<NotFoundProps> = () => {\n  return <Text>Not Found</Text>;\n};\n","import { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { AppRoutes } from './appRoutes';\nimport { NotFound } from './pages/NotFound';\nimport { lazy } from 'react';\n\n// minimum wage pages\nconst MinimumWageScatterPlot = lazy(() => import('./pages/MinimumWage'));\n\nexport const AppRouter: React.FC = () => (\n  <Switch>\n    <Route exact path={AppRoutes.Home}>\n      <Redirect to={AppRoutes.FinalVis} />\n    </Route>\n    <Route exact path={AppRoutes.FinalVis} component={MinimumWageScatterPlot} />\n    <Route component={NotFound} />\n  </Switch>\n);\n","import './HomeLayout.css';\n\nimport { DollarCircleOutlined, MenuOutlined } from '@ant-design/icons';\nimport { Button, Drawer, Layout, Menu } from 'antd';\nimport { Link } from 'react-router-dom';\nimport React, { useState } from 'react';\n\nimport { AppRouter } from '../AppRouter';\nimport { AppRoutes } from '../appRoutes';\nimport { Helmet } from 'react-helmet-async';\nimport { Loading } from '../components/Loading/Loading';\n\nconst { Content, Header } = Layout;\nconst { SubMenu } = Menu;\n\nconst MIN_WAGE_TITLE = 'Minimum Wage Data';\n\nexport interface HomeLayoutProps {}\n\nexport const HomeLayout: React.FC<HomeLayoutProps> = () => {\n  const [collapsed, setCollapsed] = useState(false);\n  const selectedTab = '1';\n  const title = MIN_WAGE_TITLE;\n\n  return (\n    <>\n      <Helmet>\n        <title>{title}</title>\n        <meta name=\"description\" content={title} />\n      </Helmet>\n      <Layout style={{ minHeight: '100vh' }}>\n        <Drawer\n          bodyStyle={{ backgroundColor: '#001628' }}\n          headerStyle={{\n            border: 'none',\n          }}\n          title=\"Pages\"\n          width={250}\n          placement=\"left\"\n          visible={collapsed}\n          onClose={() => setCollapsed(false)}\n        >\n          <Menu theme=\"dark\" selectedKeys={[selectedTab]} mode=\"inline\">\n            <SubMenu\n              key=\"1\"\n              icon={<DollarCircleOutlined />}\n              title={MIN_WAGE_TITLE}\n            >\n              <Menu.Item key=\"final-vis\">\n                <Link to={AppRoutes.FinalVis}>Minimum Wage Visualization</Link>\n              </Menu.Item>\n            </SubMenu>\n          </Menu>\n        </Drawer>\n        <Layout>\n          <Header>\n            <Button type=\"primary\" onClick={() => setCollapsed(!collapsed)}>\n              <MenuOutlined />\n            </Button>\n          </Header>\n          <React.Suspense fallback={<Loading />}>\n            <Content style={{ margin: '16px 16px' }}>\n              <AppRouter />\n            </Content>\n          </React.Suspense>\n        </Layout>\n      </Layout>\n    </>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\n\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nimport { HelmetProvider } from 'react-helmet-async';\nimport { HomeLayout } from './layout/HomeLayout';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <HelmetProvider>\n      <QueryClientProvider client={queryClient}>\n        <Router>\n          <HomeLayout />\n        </Router>\n      </QueryClientProvider>\n    </HelmetProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}